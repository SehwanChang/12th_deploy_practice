{"ast":null,"code":"var _jsxFileName = \"/Users/sehwanchang/Desktop/12th_likelion/0604/src/components/home/PostListSection.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport PostItem from \"./PostItem\";\nimport { instance } from \"../../api/instance\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { pageNumAtom } from \"../../util/atom\";\nimport { useRecoilState } from \"recoil\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PostListSection() {\n  _s();\n  const [pageNum, setPageNum] = useRecoilState(pageNumAtom);\n  const [postList, setPostList] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const handleObserver = entries => {\n    const target = entries[0];\n    if (target.isIntersecting) {\n      setPageNum(prevPage => prevPage + 1);\n    }\n  };\n  useEffect(() => {\n    const fetchPostData = async () => {\n      const params = {\n        order_by: searchParams.get(\"sortType\") === \"popular\" ? \"likes\" : \"created_at\",\n        page: pageNum\n      };\n      try {\n        const res = await instance.get(\"board/post-list/\", {\n          params\n        });\n        if (res.status === 200) {\n          if (pageNum === 1) {\n            setPostList(res.data.results);\n          } else {\n            setPostList(prev => [...prev, ...res.data.results]);\n          }\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchPostData();\n  }, [searchParams, pageNum]);\n  useEffect(() => {\n    setPageNum(1);\n  }, []);\n  useEffect(() => {\n    //  Intersection Observer의 옵션, 0일 때는 교차점이 한 번만 발생해도 실행, 1은 모든 영역이 교차해야 콜백 함수가 실행.\n    const observer = new IntersectionObserver(handleObserver, {\n      threshold: 0\n    });\n\n    // 최하단 요소를 관찰 대상으로 지정함\n    const observerTarget = document.getElementById(\"observer\");\n\n    // 관찰 시작\n    if (observerTarget) {\n      observer.observe(observerTarget);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(PostItemContainer, {\n    children: /*#__PURE__*/_jsxDEV(ScrollContainer, {\n      children: [postList === null || postList === void 0 ? void 0 : postList.map(item => /*#__PURE__*/_jsxDEV(PostItem, {\n        postData: item\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"observer\",\n        style: {\n          height: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(PostListSection, \"0i02fRnZqPJAxcjI55l2NUFvzkQ=\", false, function () {\n  return [useRecoilState, useSearchParams];\n});\n_c = PostListSection;\nconst PostItemContainer = styled.div`\n  padding: 1.5rem;\n`;\n_c2 = PostItemContainer;\nconst ScrollContainer = styled.div`\n  height: calc(100vh - 16rem);\n  overflow: scroll;\n`;\n_c3 = ScrollContainer;\nexport default PostListSection;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"PostListSection\");\n$RefreshReg$(_c2, \"PostItemContainer\");\n$RefreshReg$(_c3, \"ScrollContainer\");","map":{"version":3,"names":["React","useEffect","useState","styled","PostItem","instance","useSearchParams","pageNumAtom","useRecoilState","useNavigate","jsxDEV","_jsxDEV","PostListSection","_s","pageNum","setPageNum","postList","setPostList","searchParams","setSearchParams","handleObserver","entries","target","isIntersecting","prevPage","fetchPostData","params","order_by","get","page","res","status","data","results","prev","err","console","log","observer","IntersectionObserver","threshold","observerTarget","document","getElementById","observe","PostItemContainer","children","ScrollContainer","map","item","postData","id","fileName","_jsxFileName","lineNumber","columnNumber","style","height","_c","div","_c2","_c3","$RefreshReg$"],"sources":["/Users/sehwanchang/Desktop/12th_likelion/0604/src/components/home/PostListSection.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport PostItem from \"./PostItem\";\nimport { instance } from \"../../api/instance\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { pageNumAtom } from \"../../util/atom\";\nimport { useRecoilState } from \"recoil\";\nimport { useNavigate } from \"react-router-dom\";\nfunction PostListSection() {\n  const [pageNum, setPageNum] = useRecoilState(pageNumAtom);\n  const [postList, setPostList] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const handleObserver = (entries) => {\n    const target = entries[0];\n    if (target.isIntersecting) {\n      setPageNum((prevPage) => prevPage + 1);\n    }\n  };\n  useEffect(() => {\n    const fetchPostData = async () => {\n      const params = {\n        order_by:\n          searchParams.get(\"sortType\") === \"popular\" ? \"likes\" : \"created_at\",\n        page: pageNum,\n      };\n      try {\n        const res = await instance.get(\"board/post-list/\", {\n          params,\n        });\n        if (res.status === 200) {\n          if (pageNum === 1) {\n            setPostList(res.data.results);\n          } else {\n            setPostList((prev) => [...prev, ...res.data.results]);\n          }\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchPostData();\n  }, [searchParams, pageNum]);\n  useEffect(() => {\n    setPageNum(1);\n  }, []);\n  useEffect(() => {\n    //  Intersection Observer의 옵션, 0일 때는 교차점이 한 번만 발생해도 실행, 1은 모든 영역이 교차해야 콜백 함수가 실행.\n    const observer = new IntersectionObserver(handleObserver, {\n      threshold: 0,\n    });\n\n    // 최하단 요소를 관찰 대상으로 지정함\n    const observerTarget = document.getElementById(\"observer\");\n\n    // 관찰 시작\n    if (observerTarget) {\n      observer.observe(observerTarget);\n    }\n  }, []);\n\n  return (\n    <PostItemContainer>\n      <ScrollContainer>\n        {postList?.map((item) => (\n          <PostItem key={item.id} postData={item} />\n        ))}\n        <div id=\"observer\" style={{ height: \"10px\" }}></div>\n      </ScrollContainer>\n    </PostItemContainer>\n  );\n}\n\nconst PostItemContainer = styled.div`\n  padding: 1.5rem;\n`;\n\nconst ScrollContainer = styled.div`\n  height: calc(100vh - 16rem);\n  overflow: scroll;\n`;\n\nexport default PostListSection;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,eAAe,QAAQ,kBAAkB;AAClD,SAASC,WAAW,QAAQ,iBAAiB;AAC7C,SAASC,cAAc,QAAQ,QAAQ;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC/C,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,cAAc,CAACD,WAAW,CAAC;EACzD,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACgB,YAAY,EAAEC,eAAe,CAAC,GAAGb,eAAe,CAAC,CAAC;EACzD,MAAMc,cAAc,GAAIC,OAAO,IAAK;IAClC,MAAMC,MAAM,GAAGD,OAAO,CAAC,CAAC,CAAC;IACzB,IAAIC,MAAM,CAACC,cAAc,EAAE;MACzBR,UAAU,CAAES,QAAQ,IAAKA,QAAQ,GAAG,CAAC,CAAC;IACxC;EACF,CAAC;EACDvB,SAAS,CAAC,MAAM;IACd,MAAMwB,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,MAAMC,MAAM,GAAG;QACbC,QAAQ,EACNT,YAAY,CAACU,GAAG,CAAC,UAAU,CAAC,KAAK,SAAS,GAAG,OAAO,GAAG,YAAY;QACrEC,IAAI,EAAEf;MACR,CAAC;MACD,IAAI;QACF,MAAMgB,GAAG,GAAG,MAAMzB,QAAQ,CAACuB,GAAG,CAAC,kBAAkB,EAAE;UACjDF;QACF,CAAC,CAAC;QACF,IAAII,GAAG,CAACC,MAAM,KAAK,GAAG,EAAE;UACtB,IAAIjB,OAAO,KAAK,CAAC,EAAE;YACjBG,WAAW,CAACa,GAAG,CAACE,IAAI,CAACC,OAAO,CAAC;UAC/B,CAAC,MAAM;YACLhB,WAAW,CAAEiB,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE,GAAGJ,GAAG,CAACE,IAAI,CAACC,OAAO,CAAC,CAAC;UACvD;QACF;MACF,CAAC,CAAC,OAAOE,GAAG,EAAE;QACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAClB;IACF,CAAC;IACDV,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACP,YAAY,EAAEJ,OAAO,CAAC,CAAC;EAC3Bb,SAAS,CAAC,MAAM;IACdc,UAAU,CAAC,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EACNd,SAAS,CAAC,MAAM;IACd;IACA,MAAMqC,QAAQ,GAAG,IAAIC,oBAAoB,CAACnB,cAAc,EAAE;MACxDoB,SAAS,EAAE;IACb,CAAC,CAAC;;IAEF;IACA,MAAMC,cAAc,GAAGC,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC;;IAE1D;IACA,IAAIF,cAAc,EAAE;MAClBH,QAAQ,CAACM,OAAO,CAACH,cAAc,CAAC;IAClC;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE9B,OAAA,CAACkC,iBAAiB;IAAAC,QAAA,eAChBnC,OAAA,CAACoC,eAAe;MAAAD,QAAA,GACb9B,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEgC,GAAG,CAAEC,IAAI,iBAClBtC,OAAA,CAACP,QAAQ;QAAe8C,QAAQ,EAAED;MAAK,GAAxBA,IAAI,CAACE,EAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmB,CAC1C,CAAC,eACF5C,OAAA;QAAKwC,EAAE,EAAC,UAAU;QAACK,KAAK,EAAE;UAAEC,MAAM,EAAE;QAAO;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAExB;AAAC1C,EAAA,CA9DQD,eAAe;EAAA,QACQJ,cAAc,EAEJF,eAAe;AAAA;AAAAoD,EAAA,GAHhD9C,eAAe;AAgExB,MAAMiC,iBAAiB,GAAG1C,MAAM,CAACwD,GAAI;AACrC;AACA,CAAC;AAACC,GAAA,GAFIf,iBAAiB;AAIvB,MAAME,eAAe,GAAG5C,MAAM,CAACwD,GAAI;AACnC;AACA;AACA,CAAC;AAACE,GAAA,GAHId,eAAe;AAKrB,eAAenC,eAAe;AAAC,IAAA8C,EAAA,EAAAE,GAAA,EAAAC,GAAA;AAAAC,YAAA,CAAAJ,EAAA;AAAAI,YAAA,CAAAF,GAAA;AAAAE,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}