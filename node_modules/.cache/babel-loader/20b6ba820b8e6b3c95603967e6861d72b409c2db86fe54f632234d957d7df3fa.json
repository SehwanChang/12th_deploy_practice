{"ast":null,"code":"var _jsxFileName = \"/Users/sehwanchang/Desktop/12th_likelion/0604/src/components/login/LoginSection.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Body1 } from \"../../styles/font\";\nimport { Grey2, Red, White } from \"../../styles/color\";\nimport { instance } from \"../../api/instance\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginSection() {\n  _s();\n  //TODOS\n  // 1. 아이디, 비밀번호 값을 상태관리 변수로 지정하고 값이 변경됨에 따라 상태 업데이트하기\n  // 2. useRef 사용하여 LoginSection컴포넌트가 첫 마운트되었을떄 아이디 input에 포커스 두기\n  // 3. 로그인 버튼을 눌렀을 때, 아이디와 비밀번호를 서버에 전송하고 response 전달받기, response의 유형(성공,실패) 에 따라 예외처리 구현\n  // 4. 로그인 요청 여러번 보내는 것 방지\n\n  const [id, setId] = useState(\"\");\n  const [pw, setPw] = useState(\"\");\n  const [isPendingRequest, setIsPendingRequest] = useState(false);\n  const idRef = useRef();\n  const navigate = useNavigate();\n  const onChangeField = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name === \"id\") {\n      setId(value);\n    } else {\n      setPw(value);\n    }\n  };\n  const postLoginData = async () => {\n    if (isPendingRequest) return;\n    const body = {\n      email: id,\n      password: pw\n    };\n    try {\n      setIsPendingRequest(true);\n      const res = await instance.post(\"accounts/login/\", body);\n      if (res.status === 200 && !isPendingRequest) {\n        localStorage.setItem(\"accessToken\", res.data.access);\n        navigate(\"/\");\n      } else {\n        alert(\"아이디나 비번이 틀렸어요!\");\n      }\n    } catch (err) {\n      alert(\"아이디나 비번이 틀렸어요!\");\n    } finally {\n      setIsPendingRequest(false);\n    }\n  };\n  useEffect(() => {\n    idRef.current.focus();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(LoginSectionWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"id\",\n      children: [/*#__PURE__*/_jsxDEV(Body1, {\n        children: \"\\uC544\\uC774\\uB514\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LoginInput, {\n        placeholder: \"\\uC544\\uC774\\uB514\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n        value: id,\n        name: \"id\",\n        onChange: onChangeField,\n        ref: idRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pw\",\n      children: [/*#__PURE__*/_jsxDEV(Body1, {\n        children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LoginInput, {\n        type: \"password\",\n        placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n        value: pw,\n        name: \"pw\",\n        onChange: onChangeField\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoginButton, {\n      onClick: postLoginData,\n      children: \"\\uB85C\\uADF8\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginSection, \"YnHhFyscGmFWMw9f1EBkZOa38qI=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginSection;\nconst LoginSectionWrapper = styled.section`\n  padding: 3.6rem 3.7rem 0;\n  .pw {\n    margin-top: 2rem;\n  }\n`;\n_c2 = LoginSectionWrapper;\nconst LoginInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  background-color: ${Grey2};\n  padding: 0.3rem 1rem;\n  height: 4rem;\n  margin-top: 0.6rem;\n  border-radius: 1rem;\n`;\n_c3 = LoginInput;\nexport const LoginButton = styled.button`\n  background-color: ${Red};\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: ${White};\n  border-radius: 2rem;\n  height: 5rem;\n  font-size: 2rem;\n  font-family: \"GmarketSans\";\n  margin-top: 2rem;\n`;\n_c4 = LoginButton;\nexport default LoginSection;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"LoginSection\");\n$RefreshReg$(_c2, \"LoginSectionWrapper\");\n$RefreshReg$(_c3, \"LoginInput\");\n$RefreshReg$(_c4, \"LoginButton\");","map":{"version":3,"names":["React","useEffect","useRef","useState","styled","Body1","Grey2","Red","White","instance","useNavigate","jsxDEV","_jsxDEV","LoginSection","_s","id","setId","pw","setPw","isPendingRequest","setIsPendingRequest","idRef","navigate","onChangeField","e","name","value","target","postLoginData","body","email","password","res","post","status","localStorage","setItem","data","access","alert","err","current","focus","LoginSectionWrapper","children","className","fileName","_jsxFileName","lineNumber","columnNumber","LoginInput","placeholder","onChange","ref","type","LoginButton","onClick","_c","section","_c2","input","_c3","button","_c4","$RefreshReg$"],"sources":["/Users/sehwanchang/Desktop/12th_likelion/0604/src/components/login/LoginSection.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Body1 } from \"../../styles/font\";\nimport { Grey2, Red, White } from \"../../styles/color\";\nimport { instance } from \"../../api/instance\";\nimport { useNavigate } from \"react-router-dom\";\nfunction LoginSection() {\n  //TODOS\n  // 1. 아이디, 비밀번호 값을 상태관리 변수로 지정하고 값이 변경됨에 따라 상태 업데이트하기\n  // 2. useRef 사용하여 LoginSection컴포넌트가 첫 마운트되었을떄 아이디 input에 포커스 두기\n  // 3. 로그인 버튼을 눌렀을 때, 아이디와 비밀번호를 서버에 전송하고 response 전달받기, response의 유형(성공,실패) 에 따라 예외처리 구현\n  // 4. 로그인 요청 여러번 보내는 것 방지\n\n  const [id, setId] = useState(\"\");\n  const [pw, setPw] = useState(\"\");\n  const [isPendingRequest, setIsPendingRequest] = useState(false);\n\n  const idRef = useRef();\n  const navigate = useNavigate();\n  const onChangeField = (e) => {\n    const { name, value } = e.target;\n    if (name === \"id\") {\n      setId(value);\n    } else {\n      setPw(value);\n    }\n  };\n  const postLoginData = async () => {\n    if (isPendingRequest) return;\n    const body = {\n      email: id,\n      password: pw,\n    };\n    try {\n      setIsPendingRequest(true);\n      const res = await instance.post(\"accounts/login/\", body);\n      if (res.status === 200 && !isPendingRequest) {\n        localStorage.setItem(\"accessToken\", res.data.access);\n        navigate(\"/\");\n      } else {\n        alert(\"아이디나 비번이 틀렸어요!\");\n      }\n    } catch (err) {\n      alert(\"아이디나 비번이 틀렸어요!\");\n    } finally {\n      setIsPendingRequest(false);\n    }\n  };\n  useEffect(() => {\n    idRef.current.focus();\n  }, []);\n  return (\n    <LoginSectionWrapper>\n      <div className=\"id\">\n        <Body1>아이디</Body1>\n        <LoginInput\n          placeholder=\"아이디를 입력해주세요.\"\n          value={id}\n          name=\"id\"\n          onChange={onChangeField}\n          ref={idRef}\n        />\n      </div>\n      <div className=\"pw\">\n        <Body1>비밀번호</Body1>\n        <LoginInput\n          type=\"password\"\n          placeholder=\"비밀번호를 입력해주세요\"\n          value={pw}\n          name=\"pw\"\n          onChange={onChangeField}\n        />\n      </div>\n      <LoginButton onClick={postLoginData}>로그인</LoginButton>\n    </LoginSectionWrapper>\n  );\n}\n\nconst LoginSectionWrapper = styled.section`\n  padding: 3.6rem 3.7rem 0;\n  .pw {\n    margin-top: 2rem;\n  }\n`;\n\nconst LoginInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  background-color: ${Grey2};\n  padding: 0.3rem 1rem;\n  height: 4rem;\n  margin-top: 0.6rem;\n  border-radius: 1rem;\n`;\n\nexport const LoginButton = styled.button`\n  background-color: ${Red};\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: ${White};\n  border-radius: 2rem;\n  height: 5rem;\n  font-size: 2rem;\n  font-family: \"GmarketSans\";\n  margin-top: 2rem;\n`;\n\nexport default LoginSection;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}